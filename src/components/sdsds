"use client";
import { useEffect, useRef, useState } from "react";
import { motion } from "framer-motion";
import Link from "next/link";
import { gsap } from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";

// Register GSAP ScrollTrigger plugin
gsap.registerPlugin(ScrollTrigger);

// Sample project data (you can replace images with actual ones)
const projects = [
  {
    id: 1,
    title: "Tequila 125",
    description: "Creating an homage to the agave tequila heritage and those who are dedicated to producing one of the worldâ€™s most unique spirits.",
    category: "Branding",
    image: "https://cdn.sanity.io/images/60a2bs0u/production/c73f7b5c9c68ab66c7742d22bca82da058cf2dc7-4000x2445.png?w=1920&q=100&fit=clip&auto=format", // Replace with actual image path
    link: "/projects/tequila-125",
  },
  {
    id: 2,
    title: "Havaianas",
    description: "Taking the free-spirited essence of Havaianas worldwide.",
    category: "Campaigns",
    image: "https://cdn.sanity.io/images/60a2bs0u/production/c73f7b5c9c68ab66c7742d22bca82da058cf2dc7-4000x2445.png?w=1920&q=100&fit=clip&auto=format",
    link: "/projects/havaianas",
  },
  {
    id: 3,
    title: "TechNova",
    description: "Innovating the future with cutting-edge technology.",
    category: "Technology",
    image: "https://cdn.sanity.io/images/60a2bs0u/production/c73f7b5c9c68ab66c7742d22bca82da058cf2dc7-4000x2445.png?w=1920&q=100&fit=clip&auto=format",
    link: "/projects/technova",
  },
  {
    id: 4,
    title: "EcoVision",
    description: "Sustainable solutions for a greener tomorrow.",
    category: "Environment",
    image: "https://cdn.sanity.io/images/60a2bs0u/production/c73f7b5c9c68ab66c7742d22bca82da058cf2dc7-4000x2445.png?w=1920&q=100&fit=clip&auto=format",
    link: "/projects/ecovision",
  },
];

const WorkShowcase = () => {
  const sectionRef = useRef<HTMLElement>(null);
  const containerRef = useRef<HTMLDivElement>(null);
  const cursorRef = useRef(null);
  const [cursorText, setCursorText] = useState("");

  // Horizontal Scroll with GSAP ScrollTrigger
  useEffect(() => {
    const container = containerRef.current;
    const section = sectionRef.current;

    if (container) {
      gsap.to(container, {
        x: () => -(container.scrollWidth - window.innerWidth + 100), // Adjust for smooth scrolling
        ease: "none",
        scrollTrigger: {
          
          trigger: section,
          pin: true,
          scrub: 2,
          end: () => `+=${container.scrollWidth - window.innerWidth}`,
        },
      });
    }

    return () => {
      ScrollTrigger.getAll().forEach((trigger) => trigger.kill());
    };
  }, []);

  // Custom Cursor Effect
  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      const cursor = cursorRef.current;
      if (!cursor) return;

      gsap.to(cursor, {
      x: e.clientX,
      y: e.clientY,
      duration: 0.9,
      ease: "power3.out",
      });
    };

    const handleMouseEnter = () => {
      setCursorText("(OPEN)");
      gsap.to(cursorRef.current, { scale: 1.5, duration: 0.3 });
    };

    const handleMouseLeave = () => {
      setCursorText("");
      gsap.to(cursorRef.current, { scale: 1, duration: 0.3 });
    };

    const section = sectionRef.current;
    if (section) {
      section.addEventListener("mousemove", handleMouseMove);
      section.addEventListener("mouseenter", handleMouseEnter);
      section.addEventListener("mouseleave", handleMouseLeave);
    }

    return () => {
      if (section) {
        section.removeEventListener("mousemove", handleMouseMove);
        section.removeEventListener("mouseenter", handleMouseEnter);
        section.removeEventListener("mouseleave", handleMouseLeave);
      }
    };
  }, []);

  return (
    <section ref={sectionRef} className="relative bg-[#f5e9d7] py-12 h-screen overflow-hidden mt-16">
      <h2 className="text-3xl md:text-5xl font-bold text-center">Featured Work</h2>
      <p className="text-gray-600 text-lg md:text-xl text-center my-5">Transforming ideas into exceptional digital experiences</p>
      {/* Custom Cursor */}
      <motion.div
        ref={cursorRef}
        className="fixed top-0 left-0 w-16 h-16 bg-gray-500 rounded-full flex items-center justify-center text-black text-sm pointer-events-none z-50"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
      >
        {cursorText}
      </motion.div>

      {/* Horizontal Scroll Container */}
      <div
        ref={containerRef}
        className="flex space-x-8 px-6"
        style={{ width: "max-content" }}
      >
        {projects.map((project) => (
          <motion.div
            key={project.id}
            className="relative w-[600px] h-[400px] rounded-2xl overflow-hidden group"
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 1, ease: "easeOut" }}
            viewport={{ once: true }}
          >
            {/* Project Image */}
            <Link href={project.link}>
              <motion.img
                src={project.image}
                alt={project.title}
                className="w-full h-full object-cover"
                whileHover={{ scale: 1.05 }}
                transition={{ duration: 0.5 }}
              />

              {/* Overlay with Project Details */}
              <motion.div
                className="absolute inset-0 bg-black bg-opacity-40 flex flex-col justify-end p-6 text-white opacity-0 group-hover:opacity-100 transition-opacity duration-500"
                initial={{ y: 20 }}
                whileHover={{ y: 0 }}
                transition={{ duration: 0.5 }}
              >
                <h3 className="text-3xl font-bold">{project.title}</h3>
                <p className="text-sm mt-2">{project.description}</p>
                <div className="mt-2 text-sm opacity-70">{project.category}</div>
              </motion.div>
            </Link>
          </motion.div>
        ))}
      </div>
    </section>
  );
};

export default WorkShowcase;